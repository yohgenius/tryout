["f055a1ff6b613a490b210e8ba7c284ac902da692","5e34dac8efcbfa2fa3bad2e4dca7594a6dbaf1b9",["NativeModules","RCTDeviceEventEmitter"],[44,98],{"version":3,"sources":["/TryOut/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.android.js"],"names":["NativeModules","require","RCTDeviceEventEmitter","RCTAccessibilityInfo","AccessibilityInfo","TOUCH_EXPLORATION_EVENT","_subscriptions","Map","fetch","Promise","resolve","reject","isTouchExplorationEnabled","resp","addEventListener","eventName","handler","listener","addListener","enabled","set","removeEventListener","get","remove","delete","module","exports"],"mappings":";AAWA;;AAEA,IAAIA,gBAAgBC,OAAhB,iBAAJ;AACA,IAAIC,wBAAwBD,OAAxB,yBAAJ;;AAEA,IAAIE,uBAAuBH,cAAcI,iBAAzC;;AAEA,IAAIC,0BAA0B,2BAA9B;;AAMA,IAAIC,iBAAiB,IAAIC,GAAJ,EAArB;;AAEA,IAAIH,oBAAoB;;AAEtBI,SAAO,iBAAoB;AACzB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCR,2BAAqBS,yBAArB,CACE,UAASC,IAAT,EAAe;AACbH,gBAAQG,IAAR;AACD,OAHH;AAKD,KANM,CAAP;AAOD,GAVqB;;AAYtBC,oBAAkB,0BAChBC,SADgB,EAEhBC,OAFgB,EAGV;AACN,QAAIC,WAAWf,sBAAsBgB,WAAtB,CACbb,uBADa,EAEb,UAACc,OAAD,EAAa;AACXH,cAAQG,OAAR;AACD,KAJY,CAAf;AAMAb,mBAAec,GAAf,CAAmBJ,OAAnB,EAA4BC,QAA5B;AACD,GAvBqB;;AAyBtBI,uBAAqB,6BACnBN,SADmB,EAEnBC,OAFmB,EAGb;AACN,QAAIC,WAAWX,eAAegB,GAAf,CAAmBN,OAAnB,CAAf;AACA,QAAI,CAACC,QAAL,EAAe;AACb;AACD;AACDA,aAASM,MAAT;AACAjB,mBAAekB,MAAf,CAAsBR,OAAtB;AACD;;AAnCqB,CAAxB;;AAuCAS,OAAOC,OAAP,GAAiBtB,iBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AccessibilityInfo\n * @flow\n */\n'use strict';\n\nvar NativeModules = require('NativeModules');\nvar RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\n\nvar RCTAccessibilityInfo = NativeModules.AccessibilityInfo;\n\nvar TOUCH_EXPLORATION_EVENT = 'touchExplorationDidChange';\n\ntype ChangeEventName = $Enum<{\n  change: string,\n}>;\n\nvar _subscriptions = new Map();\n\nvar AccessibilityInfo = {\n\n  fetch: function(): Promise {\n    return new Promise((resolve, reject) => {\n      RCTAccessibilityInfo.isTouchExplorationEnabled(\n        function(resp) {\n          resolve(resp);\n        }\n      );\n    });\n  },\n\n  addEventListener: function (\n    eventName: ChangeEventName,\n    handler: Function\n  ): void {\n    var listener = RCTDeviceEventEmitter.addListener(\n      TOUCH_EXPLORATION_EVENT,\n      (enabled) => {\n        handler(enabled);\n      }\n    );\n    _subscriptions.set(handler, listener);\n  },\n\n  removeEventListener: function(\n    eventName: ChangeEventName,\n    handler: Function\n  ): void {\n    var listener = _subscriptions.get(handler);\n    if (!listener) {\n      return;\n    }\n    listener.remove();\n    _subscriptions.delete(handler);\n  },\n\n};\n\nmodule.exports = AccessibilityInfo;\n"]}]