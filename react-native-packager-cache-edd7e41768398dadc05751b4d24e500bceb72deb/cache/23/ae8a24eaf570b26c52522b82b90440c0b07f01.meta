["9034fc6a446862cc289b6fc8bae55b6ecbde18f4","83c1903e08c5bed4895cf2d2f7e6680d1ffb8048",["NativeModules","Platform"],[43,94],{"version":3,"sources":["/TryOut/node_modules/react-native/Libraries/Vibration/Vibration.js"],"names":["RCTVibration","require","Vibration","Platform","_vibrating","_id","vibrateByPattern","pattern","repeat","vibrate","slice","length","setTimeout","vibrateScheduler","id","nextIndex","OS","Array","isArray","Error","cancel","module","exports"],"mappings":";AAWA;;AAEA,IAAIA,eAAeC,yBAAyBC,SAA5C;AACA,IAAIC,WAAWF,OAAX,YAAJ;;AA0BA,IAAIG,aAAsB,KAA1B;AACA,IAAIC,MAAc,CAAlB;;AAEA,SAASC,gBAAT,CAA0BC,OAA1B,EAA2E;AAAA,MAAzBC,MAAyB,uEAAP,KAAO;;AACzE,MAAIJ,UAAJ,EAAgB;AACd;AACD;AACDA,eAAa,IAAb;AACA,MAAIG,QAAQ,CAAR,MAAe,CAAnB,EAAsB;AACpBP,iBAAaS,OAAb;AACAF,cAAUA,QAAQG,KAAR,CAAc,CAAd,CAAV;AACD;AACD,MAAIH,QAAQI,MAAR,KAAmB,CAAvB,EAA0B;AACxBP,iBAAa,KAAb;AACA;AACD;AACDQ,aAAW;AAAA,WAAMC,iBAAiB,EAAER,GAAnB,EAAwBE,OAAxB,EAAiCC,MAAjC,EAAyC,CAAzC,CAAN;AAAA,GAAX,EAA8DD,QAAQ,CAAR,CAA9D;AACD;;AAED,SAASM,gBAAT,CAA0BC,EAA1B,EAA8BP,OAA9B,EAAsDC,MAAtD,EAAuEO,SAAvE,EAA0F;AACxF,MAAI,CAACX,UAAD,IAAeU,OAAOT,GAA1B,EAA+B;AAC7B;AACD;AACDL,eAAaS,OAAb;AACA,MAAIM,aAAaR,QAAQI,MAAzB,EAAiC;AAC/B,QAAIH,MAAJ,EAAY;AACVO,kBAAY,CAAZ;AACD,KAFD,MAEO;AACLX,mBAAa,KAAb;AACA;AACD;AACF;AACDQ,aAAW;AAAA,WAAMC,iBAAiBC,EAAjB,EAAqBP,OAArB,EAA8BC,MAA9B,EAAsCO,YAAU,CAAhD,CAAN;AAAA,GAAX,EAAqER,QAAQQ,SAAR,CAArE;AACD;;AAED,IAAIb,YAAY;AACdO,WAAS,mBAAyE;AAAA,QAAhEF,OAAgE,uEAA9B,GAA8B;AAAA,QAAzBC,MAAyB,uEAAP,KAAO;;AAChF,QAAIL,SAASa,EAAT,KAAgB,SAApB,EAA+B;AAC7B,UAAI,OAAOT,OAAP,KAAmB,QAAvB,EAAiC;AAC/BP,qBAAaS,OAAb,CAAqBF,OAArB;AACD,OAFD,MAEO,IAAIU,MAAMC,OAAN,CAAcX,OAAd,CAAJ,EAA4B;AACjCP,qBAAaM,gBAAb,CAA8BC,OAA9B,EAAuCC,SAAS,CAAT,GAAa,CAAC,CAArD;AACD,OAFM,MAEA;AACL,cAAM,IAAIW,KAAJ,CAAU,+CAAV,CAAN;AACD;AACF,KARD,MAQO;AACL,UAAIf,UAAJ,EAAgB;AACd;AACD;AACD,UAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AAC/BP,qBAAaS,OAAb;AACD,OAFD,MAEO,IAAIQ,MAAMC,OAAN,CAAcX,OAAd,CAAJ,EAA4B;AACjCD,yBAAiBC,OAAjB,EAA0BC,MAA1B;AACD,OAFM,MAEA;AACL,cAAM,IAAIW,KAAJ,CAAU,+CAAV,CAAN;AACD;AACF;AACF,GAtBa;;AA0BdC,UAAQ,kBAAW;AACjB,QAAIjB,SAASa,EAAT,KAAgB,KAApB,EAA2B;AACzBZ,mBAAa,KAAb;AACD,KAFD,MAEO;AACLJ,mBAAaoB,MAAb;AACD;AACF;AAhCa,CAAhB;;AAmCAC,OAAOC,OAAP,GAAiBpB,SAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Vibration\n * @flow\n */\n'use strict';\n\nvar RCTVibration = require('NativeModules').Vibration;\nvar Platform = require('Platform');\n\n/**\n * The Vibration API is exposed at `Vibration.vibrate()`.\n * The vibration is asynchronous so this method will return immediately.\n *\n * There will be no effect on devices that do not support Vibration, eg. the simulator.\n *\n * **Note for android**\n * add `<uses-permission android:name=\"android.permission.VIBRATE\"/>` to `AndroidManifest.xml`\n *\n * **Android Usage:**\n *\n * [0, 500, 200, 500]\n * V(0.5s) --wait(0.2s)--> V(0.5s)\n *\n * [300, 500, 200, 500]\n * --wait(0.3s)--> V(0.5s) --wait(0.2s)--> V(0.5s)\n *\n * **iOS Usage:**\n * if first argument is 0, it will not be included in pattern array.\n *\n * [0, 1000, 2000, 3000]\n * V(fixed) --wait(1s)--> V(fixed) --wait(2s)--> V(fixed) --wait(3s)--> V(fixed)\n */\n\nvar _vibrating: boolean = false;\nvar _id: number = 0; // _id is necessary to prevent race condition.\n\nfunction vibrateByPattern(pattern: Array<number>, repeat: boolean = false) {\n  if (_vibrating) {\n    return;\n  }\n  _vibrating = true;\n  if (pattern[0] === 0) {\n    RCTVibration.vibrate();\n    pattern = pattern.slice(1);\n  }\n  if (pattern.length === 0) {\n    _vibrating = false;\n    return;\n  }\n  setTimeout(() => vibrateScheduler(++_id, pattern, repeat, 1), pattern[0]);\n}\n\nfunction vibrateScheduler(id, pattern: Array<number>, repeat: boolean, nextIndex: number) {\n  if (!_vibrating || id !== _id) {\n    return;\n  }\n  RCTVibration.vibrate();\n  if (nextIndex >= pattern.length) {\n    if (repeat) {\n      nextIndex = 0;\n    } else {\n      _vibrating = false;\n      return;\n    }\n  }\n  setTimeout(() => vibrateScheduler(id, pattern, repeat, nextIndex+1), pattern[nextIndex]);\n}\n\nvar Vibration = {\n  vibrate: function(pattern: number | Array<number> = 400, repeat: boolean = false) {\n    if (Platform.OS === 'android') {\n      if (typeof pattern === 'number') {\n        RCTVibration.vibrate(pattern);\n      } else if (Array.isArray(pattern)) {\n        RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    } else {\n      if (_vibrating) {\n        return;\n      }\n      if (typeof pattern === 'number') {\n        RCTVibration.vibrate();\n      } else if (Array.isArray(pattern)) {\n        vibrateByPattern(pattern, repeat);\n      } else {\n        throw new Error('Vibration pattern should be a number or array');\n      }\n    }\n  },\n  /**\n   * Stop vibration\n   */\n  cancel: function() {\n    if (Platform.OS === 'ios') {\n      _vibrating = false;\n    } else {\n      RCTVibration.cancel();\n    }\n  }\n};\n\nmodule.exports = Vibration;\n"]}]