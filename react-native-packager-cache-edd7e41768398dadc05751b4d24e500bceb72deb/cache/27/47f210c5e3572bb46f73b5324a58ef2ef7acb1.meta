["330c7b4c11c31ec4379153ae4f2a029b76bde1dd","9e62cb3ceb0e34315f774bddb234bedd483436c8",[],[],{"version":3,"sources":["/TryOut/node_modules/react-native/Libraries/EventEmitter/EventSubscription.js"],"names":["EventSubscription","subscriber","removeSubscription","module","exports"],"mappings":";AAWA;;IAQMA,iB;AAUJ,6BAAYC,UAAZ,EAAiD;AAAA;;AAC/C,SAAKA,UAAL,GAAkBA,UAAlB;AACD;;;;6BAKQ;AACP,WAAKA,UAAL,CAAgBC,kBAAhB,CAAmC,IAAnC;AACD;;;;;AAGHC,OAAOC,OAAP,GAAiBJ,iBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventSubscription\n * @flow\n */\n'use strict';\n\nimport type EventSubscriptionVendor from 'EventSubscriptionVendor';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nclass EventSubscription {\n\n  eventType: string;\n  key: number;\n  subscriber: EventSubscriptionVendor;\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  constructor(subscriber: EventSubscriptionVendor) {\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n  remove() {\n    this.subscriber.removeSubscription(this);\n  }\n}\n\nmodule.exports = EventSubscription;\n"]}]