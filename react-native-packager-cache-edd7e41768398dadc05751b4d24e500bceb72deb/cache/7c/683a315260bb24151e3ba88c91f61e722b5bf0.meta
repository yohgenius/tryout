["09305215c40270b8b2bf772a45a589be13a5a135","a4a65c47b845c86d02c2321e9910e81445e8a963",["NativeMethodsMixin","React","prop-types","ViewPropTypes","ColorPropType","create-react-class","requireNativeComponent"],[49,92,126,169,215,265,325],{"version":3,"sources":["/TryOut/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.android.js"],"names":["NativeMethodsMixin","require","React","PropTypes","ViewPropTypes","ColorPropType","createReactClass","requireNativeComponent","STYLE_ATTRIBUTES","indeterminateType","props","propName","componentName","checker","indeterminate","styleAttr","Error","rest","bool","ProgressBarAndroid","displayName","propTypes","oneOf","progress","number","color","testID","string","getDefaultProps","mixins","componentDidMount","console","warn","render","AndroidProgressBar","nativeOnly","animating","module","exports"],"mappings":";AAUA;;AAEA,IAAIA,qBAAqBC,OAArB,sBAAJ;AACA,IAAIC,QAAQD,OAAR,SAAJ;AACA,IAAIE,YAAYF,OAAZ,cAAJ;AACA,IAAIG,gBAAgBH,OAAhB,iBAAJ;AACA,IAAII,gBAAgBJ,OAAhB,iBAAJ;;AAEA,IAAIK,mBAAmBL,OAAnB,sBAAJ;AACA,IAAIM,yBAAyBN,OAAzB,0BAAJ;;AAEA,IAAIO,mBAAmB,CACrB,YADqB,EAErB,QAFqB,EAGrB,OAHqB,EAIrB,OAJqB,EAKrB,SALqB,EAMrB,cANqB,EAOrB,cAPqB,CAAvB;;AAUA,IAAIC,oBAAoB,SAApBA,iBAAoB,CAASC,KAAT,EAAgBC,QAAhB,EAA0BC,aAA1B,EAAkD;AACxE,MAAIC,UAAU,SAAVA,OAAU,GAAW;AACvB,QAAIC,gBAAgBJ,MAAMC,QAAN,CAApB;AACA,QAAII,YAAYL,MAAMK,SAAtB;AACA,QAAI,CAACD,aAAD,IAAkBC,cAAc,YAApC,EAAkD;AAChD,aAAO,IAAIC,KAAJ,CAAU,4DAAV,CAAP;AACD;AACF,GAND;;AADwE,oCAANC,IAAM;AAANA,QAAM;AAAA;;AASxE,SAAOd,UAAUe,IAAV,mBAAeR,KAAf,EAAsBC,QAAtB,EAAgCC,aAAhC,SAAkDK,IAAlD,MAA2DJ,SAAlE;AACD,CAVD;;AAmCA,IAAIM,qBAAqBb,iBAAiB;AACxCc,eAAa,oBAD2B;AAExCC,sCACKjB,aADL;AAaEW,eAAWZ,UAAUmB,KAAV,CAAgBd,gBAAhB,CAbb;;AAkBEM,mBAAeL,iBAlBjB;;AAsBEc,cAAUpB,UAAUqB,MAtBtB;;AA0BEC,WAAOpB,aA1BT;;AA8BEqB,YAAQvB,UAAUwB;AA9BpB,IAFwC;;AAmCxCC,mBAAiB,2BAAW;AAC1B,WAAO;AACLb,iBAAW,QADN;AAELD,qBAAe;AAFV,KAAP;AAID,GAxCuC;;AA0CxCe,UAAQ,CAAC7B,kBAAD,CA1CgC;;AA4CxC8B,qBAAmB,6BAAW;AAC5B,QAAI,KAAKpB,KAAL,CAAWI,aAAX,IAA4B,KAAKJ,KAAL,CAAWK,SAAX,KAAyB,YAAzD,EAAuE;AACrEgB,cAAQC,IAAR,CACE,gDACA,iDAFF;AAID;AACF,GAnDuC;;AAqDxCC,UAAQ,kBAAW;AACjB,WAAO,oBAAC,kBAAD,EAAwB,KAAKvB,KAA7B,CAAP;AACD;AAvDuC,CAAjB,CAAzB;;AA0DA,IAAIwB,qBAAqB3B,uBACvB,oBADuB,EAEvBY,kBAFuB,EAGvB,EAACgB,YAAY,EAACC,WAAW,IAAZ,EAAb,EAHuB,CAAzB;;AAMAC,OAAOC,OAAP,GAAiBnB,kBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ProgressBarAndroid\n */\n'use strict';\n\nvar NativeMethodsMixin = require('NativeMethodsMixin');\nvar React = require('React');\nvar PropTypes = require('prop-types');\nvar ViewPropTypes = require('ViewPropTypes');\nvar ColorPropType = require('ColorPropType');\n\nvar createReactClass = require('create-react-class');\nvar requireNativeComponent = require('requireNativeComponent');\n\nvar STYLE_ATTRIBUTES = [\n  'Horizontal',\n  'Normal',\n  'Small',\n  'Large',\n  'Inverse',\n  'SmallInverse',\n  'LargeInverse',\n];\n\nvar indeterminateType = function(props, propName, componentName, ...rest) {\n  var checker = function() {\n    var indeterminate = props[propName];\n    var styleAttr = props.styleAttr;\n    if (!indeterminate && styleAttr !== 'Horizontal') {\n      return new Error('indeterminate=false is only valid for styleAttr=Horizontal');\n    }\n  };\n\n  return PropTypes.bool(props, propName, componentName, ...rest) || checker();\n};\n\n/**\n * React component that wraps the Android-only `ProgressBar`. This component is used to indicate\n * that the app is loading or there is some activity in the app.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   var progressBar =\n *     <View style={styles.container}>\n *       <ProgressBar styleAttr=\"Inverse\" />\n *     </View>;\n\n *   return (\n *     <MyLoadingComponent\n *       componentView={componentView}\n *       loadingView={progressBar}\n *       style={styles.loadingComponent}\n *     />\n *   );\n * },\n * ```\n */\nvar ProgressBarAndroid = createReactClass({\n  displayName: 'ProgressBarAndroid',\n  propTypes: {\n    ...ViewPropTypes,\n    /**\n     * Style of the ProgressBar. One of:\n     *\n     * - Horizontal\n     * - Normal (default)\n     * - Small\n     * - Large\n     * - Inverse\n     * - SmallInverse\n     * - LargeInverse\n     */\n    styleAttr: PropTypes.oneOf(STYLE_ATTRIBUTES),\n    /**\n     * If the progress bar will show indeterminate progress. Note that this\n     * can only be false if styleAttr is Horizontal.\n     */\n    indeterminate: indeterminateType,\n    /**\n     * The progress value (between 0 and 1).\n     */\n    progress: PropTypes.number,\n    /**\n     * Color of the progress bar.\n     */\n    color: ColorPropType,\n    /**\n     * Used to locate this view in end-to-end tests.\n     */\n    testID: PropTypes.string,\n  },\n\n  getDefaultProps: function() {\n    return {\n      styleAttr: 'Normal',\n      indeterminate: true\n    };\n  },\n\n  mixins: [NativeMethodsMixin],\n\n  componentDidMount: function() {\n    if (this.props.indeterminate && this.props.styleAttr !== 'Horizontal') {\n      console.warn(\n        'Circular indeterminate `ProgressBarAndroid`' +\n        'is deprecated. Use `ActivityIndicator` instead.'\n      );\n    }\n  },\n\n  render: function() {\n    return <AndroidProgressBar {...this.props} />;\n  },\n});\n\nvar AndroidProgressBar = requireNativeComponent(\n  'AndroidProgressBar',\n  ProgressBarAndroid,\n  {nativeOnly: {animating: true}},\n);\n\nmodule.exports = ProgressBarAndroid;\n"]}]