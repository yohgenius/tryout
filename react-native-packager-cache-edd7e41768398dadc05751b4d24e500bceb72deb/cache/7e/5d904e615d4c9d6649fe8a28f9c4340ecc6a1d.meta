["39e2507d4dfc486712554f34553b164b5d52b061","4d5febff24271c4fc15e37eeb171953be8d05cbd",["./extractFill","./extractStroke","./extractTransform","./extractClipPath","./extractResponder","./extractOpacity"],[996,1115,1243,1379,1513,1648],{"version":3,"sources":["/TryOut/node_modules/react-native-svg/lib/extract/extractProps.js"],"names":["props","ref","styleProperties","extractedProps","opacity","propList","id","name","clipPath","transform","matrix"],"mappings":";;;;kBAOe,UAASA,KAAT,EAAgBC,GAAhB,EAAqB;AAChC,QAAMC,kBAAkB,EAAxB;;AAEA,QAAMC,iBAAiB;AACnBC,iBAAS,8BAAeJ,MAAMI,OAArB,CADU;AAEnBC,kBAAUH;AAFS,KAAvB;;AAKA,QAAIF,MAAMM,EAAV,EAAc;AACVH,uBAAeI,IAAf,GAAsBP,MAAMM,EAA5B;AACH;;AAED,QAAIN,MAAMQ,QAAV,EAAoB;AAChB,6BAAcL,cAAd,EAA8B,+BAAgBH,KAAhB,CAA9B;AACH;;AAED,yBAAcG,cAAd,EAA8B,6BAAcH,KAAd,EAAqBE,eAArB,CAA9B;AACA,yBAAcC,cAAd,EAA8B,2BAAYH,KAAZ,EAAmBE,eAAnB,CAA9B;;AAEA,QAAIF,MAAMS,SAAV,EAAqB;AACjBN,uBAAeO,MAAf,GAAwB,gCAAiBV,MAAMS,SAAvB,CAAxB;AACH,KAFD,MAEO;AACHN,uBAAeO,MAAf,GAAwB,gCAAiBV,KAAjB,CAAxB;AACH;;AAED,yBAAcG,cAAd,EAA8B,gCAAiBH,KAAjB,EAAwBC,GAAxB,CAA9B;;AAEA,WAAOE,cAAP;AACH,C;;AAnCD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA","sourcesContent":["import extractFill from './extractFill';\nimport extractStroke from './extractStroke';\nimport extractTransform from './extractTransform';\nimport extractClipPath from './extractClipPath';\nimport extractResponder from './extractResponder';\nimport extractOpacity from './extractOpacity';\n\nexport default function(props, ref) {\n    const styleProperties = [];\n\n    const extractedProps = {\n        opacity: extractOpacity(props.opacity),\n        propList: styleProperties\n    };\n\n    if (props.id) {\n        extractedProps.name = props.id;\n    }\n\n    if (props.clipPath) {\n        Object.assign(extractedProps, extractClipPath(props));\n    }\n\n    Object.assign(extractedProps, extractStroke(props, styleProperties));\n    Object.assign(extractedProps, extractFill(props, styleProperties));\n\n    if (props.transform) {\n        extractedProps.matrix = extractTransform(props.transform);\n    } else {\n        extractedProps.matrix = extractTransform(props);\n    }\n\n    Object.assign(extractedProps, extractResponder(props, ref));\n\n    return extractedProps;\n}\n"]}]