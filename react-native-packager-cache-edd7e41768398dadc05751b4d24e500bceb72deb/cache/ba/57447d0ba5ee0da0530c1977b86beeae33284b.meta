["431e4fcefcc3291ade251785dbb526b30b568afa","7b480d53168c0bdf0e3e68d7f47ec3ab344c74b9",["react","prop-types","react-native/Libraries/Renderer/shims/createReactNativeComponentClass","../lib/extract/extractProps","../lib/props","../lib/attributes","./Shape"],[157,252,382,596,723,767,812],{"version":3,"sources":["/TryOut/node_modules/react-native-svg/elements/Use.js"],"names":["idExpReg","props","matched","href","match","console","warn","root","ele","width","height","children","displayName","propTypes","string","isRequired","setNativeProps","RNSVGUse","validAttributes","uiViewClassName"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,WAAW,SAAjB;;;;;;;;;;;;;;;;;;;;;iCAea;AAAA;;AAAA,gBACEC,KADF,GACW,IADX,CACEA,KADF;;AAGL,gBAAMC,UAAUD,MAAME,IAAN,CAAWC,KAAX,CAAiBJ,QAAjB,CAAhB;AACA,gBAAIG,aAAJ;;AAEA,gBAAID,OAAJ,EAAa;AACTC,uBAAOD,QAAQ,CAAR,CAAP;AACH;;AAED,gBAAI,CAACC,IAAL,EAAW;AACPE,wBAAQC,IAAR,CAAa,oFAAoFL,MAAME,IAA1F,GAAiG,GAA9G;AACH;;AAED,mBAAO;AAAC,wBAAD;AAAA;AACH,yBAAK,kBAAO;AAAC,+BAAKI,IAAL,GAAYC,GAAZ;AAAiB;AAD3B,mBAEC,4BAAaP,KAAb,EAAoB,IAApB,CAFD;AAGH,0BAAME,IAHH;AAIH,2BAAOF,MAAMQ,KAJV;AAKH,4BAAQR,MAAMS;AALX;AAMLT,sBAAMU;AAND,aAAP;AAOH;;;2BAlCMC,W,GAAc,K,SAEdC,S;AACHV,UAAM,oBAAUW,MAAV,CAAiBC,U;AACvBN,4B;AACAC,6B;;;SAIJM,c,GAAiB,YAAa;AAAA;;AAC1B,wBAAKT,IAAL,EAAUS,cAAV;AACH,K;;;;;;AA0BL,IAAMC,WAAW,+CAAgC;AAC7CC,8CAD6C;AAE7CC,qBAAiB;AAF4B,CAAhC,CAAjB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport createReactNativeComponentClass from 'react-native/Libraries/Renderer/shims/createReactNativeComponentClass';\nimport extractProps from '../lib/extract/extractProps';\nimport {pathProps, numberProp} from '../lib/props';\nimport {UseAttributes} from '../lib/attributes';\nimport Shape from './Shape';\n\nconst idExpReg = /^#(.+)$/;\nexport default class extends Shape {\n    static displayName = 'Use';\n\n    static propTypes = {\n        href: PropTypes.string.isRequired,\n        width: numberProp, // Just for reusing `Symbol`\n        height: numberProp, //  Just for reusing `Symbol`\n        ...pathProps\n    };\n\n    setNativeProps = (...args) => {\n        this.root.setNativeProps(...args);\n    };\n\n    render() {\n        const {props} = this;\n        // match \"url(#pattern)\"\n        const matched = props.href.match(idExpReg);\n        let href;\n\n        if (matched) {\n            href = matched[1];\n        }\n\n        if (!href) {\n            console.warn('Invalid `href` prop for `Use` element, expected a href like `\"#id\"`, but got: \"' + props.href + '\"');\n        }\n\n        return <RNSVGUse\n            ref={ele => {this.root = ele;}}\n            {...extractProps(props, this)}\n            href={href}\n            width={props.width}\n            height={props.height}\n        >{props.children}</RNSVGUse>;\n    }\n}\n\nconst RNSVGUse = createReactNativeComponentClass({\n    validAttributes: UseAttributes,\n    uiViewClassName: 'RNSVGUse'\n});\n\n"]}]