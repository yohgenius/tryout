["2a65c5c93e38dfef7d97bdffec8a8fc37e70c88e","00bd0d9d4270170a90534513470089b4d8256b4c",["ErrorUtils","Systrace","deepFreezeAndThrowOnMutationInDev","fbjs/lib/invariant","stringifySafe","JSTimers"],[42,80,142,204,255,5951],{"version":3,"sources":["/TryOut/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"],"names":["ErrorUtils","require","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","JSTimers","MessageQueue","_lazyCallableModules","_queue","_successCallbacks","_failureCallbacks","_callID","_lastFlush","_eventLoopStartTime","Date","getTime","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","callFunctionReturnFlushedQueue","bind","callFunctionReturnResultAndFlushedQueue","flushedQueue","invokeCallbackAndReturnFlushedQueue","module","method","args","__guard","__callFunction","result","cbID","__invokeCallback","__callImmediates","queue","length","name","factory","getValue","moduleID","methodID","params","onFail","onSucc","push","global","nativeTraceBeginAsyncFlow","JSON","stringify","now","nativeFlushQueueImmediate","_inCall","counterEvent","__spy","isFinite","type","methods","fn","error","reportFatalError","beginEvent","callImmediates","endEvent","moduleMethods","getCallableModule","apply","callID","callback","debug","errorMessage","profileName","spyOrToggle","prototype","console","log","info","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MessageQueue\n * @flow\n */\n\n/*eslint no-bitwise: 0*/\n\n'use strict';\n\nconst ErrorUtils = require('ErrorUtils');\nconst Systrace = require('Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('fbjs/lib/invariant');\nconst stringifySafe = require('stringifySafe');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string|number,\n  args: any\n}\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 32;\n\n// Work around an initialization order issue\nlet JSTimers = null;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: void => Object};\n  _queue: [Array<number>, Array<number>, Array<any>, number];\n  _successCallbacks: Array<?Function>;\n  _failureCallbacks: Array<?Function>;\n  _callID: number;\n  _inCall: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n\n  _debugInfo: Object;\n  _remoteModuleTable: Object;\n  _remoteMethodTable: Object;\n\n  __spy: ?(data: SpyData) => void;\n\n  constructor() {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = [];\n    this._failureCallbacks = [];\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = new Date().getTime();\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n\n    (this:any).callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);\n    (this:any).callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);\n    (this:any).flushedQueue = this.flushedQueue.bind(this);\n    (this:any).invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);\n  }\n\n  /**\n   * Public APIs\n   */\n\n  static spy(spyOrToggle: boolean|(data: SpyData) => void){\n    if (spyOrToggle === true){\n      MessageQueue.prototype.__spy = info => {\n        console.log(`${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n                    `${info.module ? (info.module + '.') : ''}${info.method}` +\n                    `(${JSON.stringify(info.args)})`);\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue(module: string, method: string, args: Array<any>) {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  callFunctionReturnResultAndFlushedQueue(module: string, method: string, args: Array<any>) {\n    let result;\n    this.__guard(() => {\n      result = this.__callFunction(module, method, args);\n    });\n\n    return [result, this.flushedQueue()];\n  }\n\n  invokeCallbackAndReturnFlushedQueue(cbID: number, args: Array<any>) {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  flushedQueue() {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  }\n\n  getEventLoopRunningTime() {\n    return new Date().getTime() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void => Object) = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string) {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  enqueueNativeCall(moduleID: number, methodID: number, params: Array<any>, onFail: ?Function, onSucc: ?Function) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      onFail && params.push(this._callID << 1);\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks[this._callID] = onSucc;\n      this._failureCallbacks[this._callID] = onFail;\n    }\n\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);\n    }\n    this._callID++;\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Any params sent over the bridge should be encodable as JSON\n      JSON.stringify(params);\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params:any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = new Date().getTime();\n    if (global.nativeFlushQueueImmediate &&\n        (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS ||\n         this._inCall === 0)) {\n      var queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n    if (__DEV__ && this.__spy && isFinite(moduleID)) {\n      this.__spy(\n        { type: TO_NATIVE,\n          module: this._remoteModuleTable[moduleID],\n          method: this._remoteMethodTable[moduleID][methodID],\n          args: params }\n      );\n    } else if (this.__spy) {\n      this.__spy({type: TO_NATIVE, module: moduleID + '', method: methodID, args: params});\n    }\n  }\n\n  createDebugLookup(moduleID: number, name: string, methods: Array<string>) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods;\n    }\n  }\n\n  /**\n   * Private methods\n   */\n\n  __guard(fn: () => void) {\n    this._inCall++;\n    try {\n      fn();\n    } catch (error) {\n      ErrorUtils.reportFatalError(error);\n    } finally {\n      this._inCall--;\n    }\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (!JSTimers) {\n      JSTimers = require('JSTimers');\n    }\n    JSTimers.callImmediates();\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n    Systrace.beginEvent(`${module}.${method}()`);\n    if (this.__spy) {\n      this.__spy({ type: TO_JS, module, method, args});\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module, method\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method, module\n    );\n    const result = moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n    return result;\n  }\n\n  __invokeCallback(cbID: number, args: Array<any>) {\n    this._lastFlush = new Date().getTime();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    const callID = cbID >>> 1;\n    const callback = (cbID & 1) ? this._successCallbacks[callID] : this._failureCallbacks[callID];\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      if (!callback) {\n        let errorMessage = `Callback with id ${cbID}: ${module}.${method}() not found`;\n        if (method) {\n          errorMessage = `The callback ${method}() exists in module ${module}, `\n          + 'but only one callback may be registered to a function in a native module.';\n        }\n        invariant(\n          callback,\n          errorMessage\n        );\n      }\n      const profileName = debug ? '<callback for ' + module + '.' + method + '>' : cbID;\n      if (callback && this.__spy) {\n        this.__spy({ type: TO_JS, module:null, method:profileName, args });\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`);\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    this._successCallbacks[callID] = this._failureCallbacks[callID] = null;\n    callback.apply(null, args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n}\n\nmodule.exports = MessageQueue;\n"]}]