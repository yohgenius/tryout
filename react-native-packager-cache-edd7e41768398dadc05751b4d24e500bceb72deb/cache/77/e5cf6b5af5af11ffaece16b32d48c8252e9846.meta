["07fc279d52dd5ada59dab30df0aeeb81b1ddb8c2","7efec04f0d9d85f00a329d70d3204496c74ecff2",["react","react-native","expo","./vendor/react-native-vector-icons/lib/create-icon-set","./vendor/react-native-vector-icons/lib/icon-button","regenerator-runtime"],[2934,3031,3069,3108,3269,3427],{"version":3,"sources":["/TryOut/node_modules/@expo/vector-icons/createIconSet.js"],"names":["glyphMap","fontName","expoAssetId","expoFontName","style","ignoreWarning","fontFamily","font","RNVIconComponent","Icon","state","fontIsLoaded","isLoaded","_mounted","loadAsync","setState","props","_icon","setNativeProps","view","Component","propTypes","defaultProps","Button"],"mappings":";;;;kBAMe,UAASA,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,EAA0C;AAAA;;AACvD,MAAMC,eAAe,WAAKC,KAAL,CAAWH,QAAX,EAAqB;AACxCI,mBAAe;AADyB,GAArB,EAElBC,UAFH;AAGA,MAAMC,uCAAUN,QAAV,EAAqBC,WAArB,CAAN;AACA,MAAMM,mBAAmB,6BAAcR,QAAd,EAAwBG,YAAxB,CAAzB;;AALuD,MAOjDM,IAPiD;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,gMAWrDC,KAXqD,GAW7C;AACNC,sBAAc,WAAKC,QAAL,CAAcX,QAAd;AADR,OAX6C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBnD,qBAAKY,QAAL,GAAgB,IAAhB;;AAhBmD,oBAiB9C,KAAKH,KAAL,CAAWC,YAjBmC;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAkB3C,WAAKG,SAAL,CAAeP,IAAf,CAlB2C;;AAAA;AAmBjD,qBAAKM,QAAL,IAAiB,KAAKE,QAAL,CAAc,EAAEJ,cAAc,IAAhB,EAAd,CAAjB;;AAnBiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAuB9B;AACrB,aAAKE,QAAL,GAAgB,KAAhB;AACD;AAzBoD;AAAA;AAAA,qCA2BtCG,KA3BsC,EA2B/B;AACpB,YAAI,KAAKC,KAAT,EAAgB;AACd,eAAKA,KAAL,CAAWC,cAAX,CAA0BF,KAA1B;AACD;AACF;AA/BoD;AAAA;AAAA,+BAiC5C;AAAA;;AACP,YAAI,CAAC,KAAKN,KAAL,CAAWC,YAAhB,EAA8B;AAC5B,iBAAO,sDAAP;AACD;;AAED,eACE,8BAAC,gBAAD;AACE,eAAK,mBAAQ;AACX,mBAAKM,KAAL,GAAaE,IAAb;AACD;AAHH,WAIM,KAAKH,KAJX,EADF;AAQD;AA9CoD;AAAA;AAAA,IAOpC,gBAAMI,SAP8B,UAQ9CC,SAR8C,GAQlCb,iBAAiBa,SARiB,SAS9CC,YAT8C,GAS/Bd,iBAAiBc,YATc;;;AAiDvDb,OAAKc,MAAL,GAAc,0BAA0Bd,IAA1B,CAAd;AACAA,OAAKT,QAAL,GAAgBA,QAAhB;AACAS,OAAKF,IAAL,GAAYA,IAAZ;;AAEA,SAAOE,IAAP;AACD,C;;AA5DD;;;;AACA;;AACA;;AACA;;;;AACA","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport { Font } from 'expo';\nimport createIconSet from './vendor/react-native-vector-icons/lib/create-icon-set';\nimport createIconButtonComponent from './vendor/react-native-vector-icons/lib/icon-button';\n\nexport default function(glyphMap, fontName, expoAssetId) {\n  const expoFontName = Font.style(fontName, {\n    ignoreWarning: true,\n  }).fontFamily;\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, expoFontName);\n\n  class Icon extends React.Component {\n    static propTypes = RNVIconComponent.propTypes;\n    static defaultProps = RNVIconComponent.defaultProps;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName),\n    };\n\n    async componentWillMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={view => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.glyphMap = glyphMap;\n  Icon.font = font;\n\n  return Icon;\n}\n"]}]