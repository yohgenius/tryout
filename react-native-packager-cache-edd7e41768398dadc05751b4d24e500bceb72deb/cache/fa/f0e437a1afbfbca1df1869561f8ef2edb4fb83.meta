["76d953a87d5e992ef14b37f7954ba104f099fa28","a0d26a49cbe671e5e458b4a62160e241bf7ceba6",["react-native","./Constants","regenerator-runtime"],[126,169,286],{"version":3,"sources":["/TryOut/node_modules/expo/src/Google.js"],"names":["logInAsync","Google","ExponentGoogle","config","behavior","appOwnership","scopes","androidClientId","androidStandaloneAppClientId","iosClientId","iosStandaloneAppClientId","logInResult","fetch","headers","Authorization","accessToken","userInfoResponse","json","user","id","name","givenName","given_name","familyName","family_name","photoUrl","picture","email"],"mappings":";;;QAqCsBA,U,GAAAA,U;;AAnCtB;;AAEA;;;;;;AAEA,IAAMC,SAAS,2BAAcC,cAA7B;;AA+BO,SAAeF,UAAf,CAA0BG,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,kBADC,GACUD,OAAOC,QADjB;;AAEL,cAAI,CAACA,QAAL,EAAe;AACbA,uBAAW,QAAX;AACD;;AAGD,cAAIA,aAAa,QAAb,IAAyB,oBAAUC,YAAV,KAA2B,YAAxD,EAAsE;AACpED,uBAAW,KAAX;AACD;;AAEGE,gBAXC,GAWQH,OAAOG,MAXf;;AAYL,cAAI,CAACA,MAAL,EAAa;AACXA,qBAAS,CAAC,SAAD,EAAY,OAAZ,CAAT;AACD;;AAEKC,yBAhBD,GAiBH,oBAAUF,YAAV,KAA2B,YAA3B,GACIF,OAAOK,4BADX,GAEIL,OAAOI,eAnBR;AAoBCE,qBApBD,GAqBH,oBAAUJ,YAAV,KAA2B,YAA3B,GACIF,OAAOO,wBADX,GAEIP,OAAOM,WAvBR;AAAA;AAAA,0CAyBqBR,OAAOD,UAAP,CAAkB;AAC1CO,4CAD0C;AAE1CE,oCAF0C;AAG1CL,8BAH0C;AAI1CE;AAJ0C,WAAlB,CAzBrB;;AAAA;AAyBCK,qBAzBD;;AAAA,gBAgCDP,aAAa,KAhCZ;AAAA;AAAA;AAAA;;AAAA;AAAA,0CAmC0BQ,MAC3B,2CAD2B,EAE3B;AACEC,qBAAS,EAAEC,2BAAyBH,YAAYI,WAAvC;AADX,WAF2B,CAnC1B;;AAAA;AAmCCC,0BAnCD;AAAA;AAAA,0CAyCsBA,iBAAiBC,IAAjB,EAzCtB;;AAAA;AAyCHD,0BAzCG;AAAA,oEA2CEL,WA3CF;AA4CDO,kBAAM;AACJC,kBAAIH,iBAAiBG,EADjB;AAEJC,oBAAMJ,iBAAiBI,IAFnB;AAGJC,yBAAWL,iBAAiBM,UAHxB;AAIJC,0BAAYP,iBAAiBQ,WAJzB;AAKJC,wBAAUT,iBAAiBU,OALvB;AAMJC,qBAAOX,iBAAiBW;AANpB;AA5CL;;AAAA;AAAA,2CAsDIhB,WAtDJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// @flow\n\nimport { NativeModules } from 'react-native';\n\nimport Constants from './Constants';\n\nconst Google = NativeModules.ExponentGoogle;\n\ntype LogInConfig = {\n  androidClientId?: string,\n  androidStandaloneAppClientId?: string,\n  iosClientId?: string,\n  iosStandaloneAppClientId?: string,\n  behavior?: 'system' | 'web',\n  scopes?: Array<string>,\n};\n\ntype LogInResult =\n  | {\n      type: 'cancel',\n    }\n  | {\n      type: 'success',\n      accessToken: string,\n      idToken: ?string,\n      refreshToken: ?string,\n      serverAuthCode: ?string,\n      user: {\n        id: string,\n        name: string,\n        givenName: string,\n        familyName: string,\n        photoUrl?: ?string,\n        email?: ?string,\n      },\n    };\n\nexport async function logInAsync(config: LogInConfig): Promise<LogInResult> {\n  let behavior = config.behavior;\n  if (!behavior) {\n    behavior = 'system';\n  }\n\n  // Only standalone apps can use system login.\n  if (behavior === 'system' && Constants.appOwnership !== 'standalone') {\n    behavior = 'web';\n  }\n\n  let scopes = config.scopes;\n  if (!scopes) {\n    scopes = ['profile', 'email'];\n  }\n\n  const androidClientId =\n    Constants.appOwnership === 'standalone'\n      ? config.androidStandaloneAppClientId\n      : config.androidClientId;\n  const iosClientId =\n    Constants.appOwnership === 'standalone'\n      ? config.iosStandaloneAppClientId\n      : config.iosClientId;\n\n  const logInResult = await Google.logInAsync({\n    androidClientId,\n    iosClientId,\n    behavior,\n    scopes,\n  });\n\n  if (behavior === 'web') {\n    // Web login only returns an accessToken so use it to fetch the same info\n    // as the native login does.\n    let userInfoResponse = await fetch(\n      'https://www.googleapis.com/userinfo/v2/me',\n      {\n        headers: { Authorization: `Bearer ${logInResult.accessToken}` },\n      }\n    );\n    userInfoResponse = await userInfoResponse.json();\n    return {\n      ...logInResult,\n      user: {\n        id: userInfoResponse.id,\n        name: userInfoResponse.name,\n        givenName: userInfoResponse.given_name,\n        familyName: userInfoResponse.family_name,\n        photoUrl: userInfoResponse.picture,\n        email: userInfoResponse.email,\n      },\n    };\n  } else {\n    return logInResult;\n  }\n}\n"]}]